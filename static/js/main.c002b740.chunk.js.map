{"version":3,"sources":["config/index.js","substrate-lib/SubstrateContext.js","substrate-lib/utils.js","substrate-lib/components/TxButton.js","substrate-lib/components/DeveloperConsole.js","Navbar.js","utils/MAToAtomicUnit.js","Transfer.js","Labs.js","Governance.js","Routes.js","App.js","index.js"],"names":["configEnv","require","types","envVars","reduce","mem","n","undefined","process","slice","config","configCommon","INIT_STATE","socket","queryString","parse","window","location","search","rpc","PROVIDER_SOCKET","jsonrpc","RPC","keyring","keyringState","api","apiError","apiState","reducer","state","action","type","payload","Error","loadAccts","SubstrateContext","React","createContext","SubstrateContextProvider","props","initState","forEach","key","useReducer","dispatch","provider","WsProvider","_api","ApiPromise","on","isReady","then","err","connect","asyncLoadAccounts","a","web3Enable","APP_NAME","web3Accounts","allAccounts","map","address","meta","name","source","loadAll","isDevelopment","DEVELOPMENT_KEYRING","console","error","loadAccounts","Provider","value","children","useSubstrate","useContext","utils","paramConversion","num","TxButton","accountPair","label","setStatus","color","style","attrs","disabled","useState","unsub","setUnsub","sudoKey","setSudoKey","palletRpc","callable","inputParams","paramFields","isSudo","isUncheckedSudo","useEffect","query","sudo","isEmpty","toString","acctPair","getFromAcct","isInjected","web3FromSource","injected","fromAcct","setSigner","signer","txResHandler","status","dispatchError","events","isFinalized","asFinalized","isInBlock","asInBlock","sudoTx","transformed","transformParams","tx","txExecute","signAndSend","uncheckedSudoTx","sudoUncheckedWeight","signedTx","unsignedTx","send","queryResHandler","result","isNone","emptyAsNull","constant","consts","transaction","opts","paramVal","inputParam","trim","params","field","ind","memo","converted","indexOf","split","e","single","isNumType","Number","parseFloat","parseInt","some","el","Button","basic","onClick","length","every","paramField","param","optional","DeveloperConsole","util","utilCrypto","Main","setAccountAddress","accountSelected","setAccountSelected","keyringOptions","getPairs","account","text","toUpperCase","icon","initialAddress","contextRef","createRef","Sticky","context","Menu","attached","tabular","backgroundColor","borderColor","paddingTop","paddingBottom","Container","position","alignItems","Item","to","target","rel","href","circular","size","Dropdown","selection","clearable","placeholder","options","onChange","_","dropdown","BalanceAnnotation","accountBalance","setAccountBalance","unsubscribe","system","balance","data","free","toHuman","catch","Label","pointing","Icon","AccountSelector","MAToAtomicUnits","amountMA","decimals","registry","chainDecimals","BN","pow","addressTo","amount","formState","setFormState","prev","Grid","Column","width","Header","textAlign","Form","Field","Input","fluid","overflowWrap","transferInfo","setTransferInfo","sender1","setSender1","sender2","setSender2","receiver1","setReceiver1","receiver2","setReceiver2","proof","setProof","fileUploadRef","useRef","uploadErrorText","setUploadErrorText","formatBase64StringForDisplay","base64String","formattedString","i","displayTransferInfo","transferInfoBytes","base64Encode","validateFileUpload","fileText","base64Validate","current","bytes","base64Decode","inline","accept","id","file","files","reader","FileReader","readAsText","onload","readerEvent","ref","marginLeft","marginTop","border","Message","onDismiss","header","content","visible","exact","from","path","component","Governance","accountAddress","getPair","loader","Dimmer","active","Loader","centered","columns","padded","negative","compact","floating","JSON","stringify","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c002b740.chunk.js","sourcesContent":["import configCommon from './common.json';\n// Using `require` as `import` does not support dynamic loading (yet).\nconst configEnv = require(`./${process.env.NODE_ENV}.json`);\nconst types = require('./types.json');\n\n// Accepting React env vars and aggregating them into `config` object.\nconst envVarNames = [\n  'REACT_APP_PROVIDER_SOCKET',\n  'REACT_APP_DEVELOPMENT_KEYRING'\n];\nconst envVars = envVarNames.reduce((mem, n) => {\n  // Remove the `REACT_APP_` prefix\n  if (process.env[n] !== undefined) mem[n.slice(10)] = process.env[n];\n  return mem;\n}, {});\n\nconst config = { ...configCommon, ...configEnv, ...envVars, types };\nexport default config;\n","import React, { useReducer, useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport jsonrpc from '@polkadot/types/interfaces/jsonrpc';\nimport queryString from 'query-string';\n\nimport { ApiPromise, WsProvider } from '@polkadot/api';\nimport { web3Accounts, web3Enable } from '@polkadot/extension-dapp';\nimport keyring from '@polkadot/ui-keyring';\n\nimport config from '../config';\n\nconst parsedQuery = queryString.parse(window.location.search);\nconst connectedSocket = parsedQuery.rpc || config.PROVIDER_SOCKET;\n\n///\n// Initial state for `useReducer`\n\nconst INIT_STATE = {\n  socket: connectedSocket,\n  jsonrpc: { ...jsonrpc, ...config.RPC },\n  types: config.types,\n  keyring: null,\n  keyringState: null,\n  api: null,\n  apiError: null,\n  apiState: null\n};\n\n///\n// Reducer function for `useReducer`\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'CONNECT_INIT':\n      return { ...state, apiState: 'CONNECT_INIT' };\n\n    case 'CONNECT':\n      return { ...state, api: action.payload, apiState: 'CONNECTING' };\n\n    case 'CONNECT_SUCCESS':\n      return { ...state, apiState: 'READY' };\n\n    case 'CONNECT_ERROR':\n      return { ...state, apiState: 'ERROR', apiError: action.payload };\n\n    case 'LOAD_KEYRING':\n      return { ...state, keyringState: 'LOADING' };\n\n    case 'SET_KEYRING':\n      return { ...state, keyring: action.payload, keyringState: 'READY' };\n\n    case 'KEYRING_ERROR':\n      return { ...state, keyring: null, keyringState: 'ERROR' };\n\n    default:\n      throw new Error(`Unknown type: ${action.type}`);\n  }\n};\n\n///\n// Connecting to the Substrate node\n\nconst connect = (state, dispatch) => {\n  const { apiState, socket, jsonrpc, types } = state;\n  // We only want this function to be performed once\n  if (apiState) return;\n\n  dispatch({ type: 'CONNECT_INIT' });\n\n  const provider = new WsProvider(socket);\n  const _api = new ApiPromise({ provider, types, rpc: jsonrpc });\n\n  // Set listeners for disconnection and reconnection event.\n  _api.on('connected', () => {\n    dispatch({ type: 'CONNECT', payload: _api });\n    // `ready` event is not emitted upon reconnection and is checked explicitly here.\n    _api.isReady.then((_api) => dispatch({ type: 'CONNECT_SUCCESS' }));\n  });\n  _api.on('ready', () => dispatch({ type: 'CONNECT_SUCCESS' }));\n  _api.on('error', err => dispatch({ type: 'CONNECT_ERROR', payload: err }));\n};\n\n///\n// Loading accounts from dev and polkadot-js extension\n\nlet loadAccts = false;\nconst loadAccounts = (state, dispatch) => {\n  const asyncLoadAccounts = async () => {\n    dispatch({ type: 'LOAD_KEYRING' });\n    try {\n      await web3Enable(config.APP_NAME);\n      let allAccounts = await web3Accounts();\n      allAccounts = allAccounts.map(({ address, meta }) =>\n        ({ address, meta: { ...meta, name: `${meta.name} (${meta.source})` } }));\n      keyring.loadAll({ isDevelopment: config.DEVELOPMENT_KEYRING }, allAccounts);\n      dispatch({ type: 'SET_KEYRING', payload: keyring });\n    } catch (e) {\n      console.error(e);\n      dispatch({ type: 'KEYRING_ERROR' });\n    }\n  };\n\n  const { keyringState } = state;\n  // If `keyringState` is not null `asyncLoadAccounts` is running.\n  if (keyringState) return;\n  // If `loadAccts` is true, the `asyncLoadAccounts` has been run once.\n  if (loadAccts) return dispatch({ type: 'SET_KEYRING', payload: keyring });\n\n  // This is the heavy duty work\n  loadAccts = true;\n  asyncLoadAccounts();\n};\n\nconst SubstrateContext = React.createContext();\n\nconst SubstrateContextProvider = (props) => {\n  // filtering props and merge with default param value\n  const initState = { ...INIT_STATE };\n  const neededPropNames = ['socket', 'types'];\n  neededPropNames.forEach(key => {\n    initState[key] = (typeof props[key] === 'undefined' ? initState[key] : props[key]);\n  });\n\n  const [state, dispatch] = useReducer(reducer, initState);\n  connect(state, dispatch);\n  loadAccounts(state, dispatch);\n\n  return <SubstrateContext.Provider value={state}>\n    {props.children}\n  </SubstrateContext.Provider>;\n};\n\n// prop typechecking\nSubstrateContextProvider.propTypes = {\n  socket: PropTypes.string,\n  types: PropTypes.object\n};\n\nconst useSubstrate = () => ({ ...useContext(SubstrateContext) });\n\nexport { SubstrateContextProvider, useSubstrate };\n","const utils = {\n  paramConversion: {\n    num: [\n      'Compact<Balance>',\n      'BalanceOf',\n      'u8', 'u16', 'u32', 'u64', 'u128',\n      'i8', 'i16', 'i32', 'i64', 'i128'\n    ]\n  }\n};\n\nexport default utils;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Button } from 'semantic-ui-react';\nimport { web3FromSource } from '@polkadot/extension-dapp';\n\nimport { useSubstrate } from '../';\nimport utils from '../utils';\n\nfunction TxButton ({\n  accountPair = null,\n  label,\n  setStatus,\n  color = 'blue',\n  style = null,\n  type = 'QUERY',\n  attrs = null,\n  disabled = false\n}) {\n  // Hooks\n  const { api } = useSubstrate();\n  const [unsub, setUnsub] = useState(null);\n  const [sudoKey, setSudoKey] = useState(null);\n\n  const { palletRpc, callable, inputParams, paramFields } = attrs;\n\n  const isQuery = () => type === 'QUERY';\n  const isSudo = () => type === 'SUDO-TX';\n  const isUncheckedSudo = () => type === 'UNCHECKED-SUDO-TX';\n  const isUnsigned = () => type === 'UNSIGNED-TX';\n  const isSigned = () => type === 'SIGNED-TX';\n  const isRpc = () => type === 'RPC';\n  const isConstant = () => type === 'CONSTANT';\n\n  const loadSudoKey = () => {\n    (async function () {\n      if (!api || !api.query.sudo) { return; }\n      const sudoKey = await api.query.sudo.key();\n      sudoKey.isEmpty ? setSudoKey(null) : setSudoKey(sudoKey.toString());\n    })();\n  };\n\n  useEffect(loadSudoKey, [api]);\n\n  const getFromAcct = async () => {\n    const {\n      address,\n      meta: { source, isInjected }\n    } = accountPair;\n    let fromAcct;\n\n    // signer is from Polkadot-js browser extension\n    if (isInjected) {\n      const injected = await web3FromSource(source);\n      fromAcct = address;\n      api.setSigner(injected.signer);\n    } else {\n      fromAcct = accountPair;\n    }\n\n    return fromAcct;\n  };\n\n  const txResHandler = ({ status, events, dispatchError }) => {\n    if (dispatchError && status.isFinalized) {\n      setStatus(`Transaction failed. Block hash: ${status.asFinalized.toString()}`);\n    } else if (dispatchError && status.isInBlock) {\n      setStatus(`Transaction failed. Block hash: ${status.asInBlock.toString()}`);\n    } else {\n      status.isFinalized\n        ? setStatus(`😉 Finalized. Block hash: ${status.asFinalized.toString()}`)\n        : setStatus(`Current transaction status: ${status.type}`);\n    }\n  };\n\n  const sudoTx = async () => {\n    const fromAcct = await getFromAcct();\n    const transformed = transformParams(paramFields, inputParams);\n    // transformed can be empty parameters\n    try {\n    const txExecute = transformed\n      ? api.tx.sudo.sudo(api.tx[palletRpc][callable](...transformed))\n      : api.tx.sudo.sudo(api.tx[palletRpc][callable]());\n    } catch (error) {\n      setStatus(`Transaction failed. ${error.toString()}`);\n      return;\n    }\n\n    const unsub = txExecute.signAndSend(fromAcct, txResHandler)\n    setUnsub(() => unsub);\n  };\n\n  const uncheckedSudoTx = async () => {\n    const fromAcct = await getFromAcct();\n    const txExecute =\n        api.tx.sudo.sudoUncheckedWeight(api.tx[palletRpc][callable](...inputParams), 0);\n\n    const unsub = txExecute.signAndSend(fromAcct, txResHandler)\n    setUnsub(() => unsub);\n  };\n\n  const signedTx = async () => {\n    const fromAcct = await getFromAcct();\n    const transformed = transformParams(paramFields, inputParams);\n    // transformed can be empty parameters\n\n    const txExecute = transformed\n      ? api.tx[palletRpc][callable](...transformed)\n      : api.tx[palletRpc][callable]();\n\n    const unsub = await txExecute.signAndSend(fromAcct, txResHandler)\n    setUnsub(() => unsub);\n  };\n\n  const unsignedTx = async () => {\n    const transformed = transformParams(paramFields, inputParams);\n    // transformed can be empty parameters\n    const txExecute = transformed\n      ? api.tx[palletRpc][callable](...transformed)\n      : api.tx[palletRpc][callable]();\n\n    const unsub = await txExecute.send(txResHandler);\n    setUnsub(() => unsub);\n  };\n\n  const queryResHandler = result =>\n    result.isNone ? setStatus('None') : setStatus(result.toString());\n\n  const query = async () => {\n    const transformed = transformParams(paramFields, inputParams);\n    const unsub = await api.query[palletRpc][callable](...transformed, queryResHandler);\n    setUnsub(() => unsub);\n  };\n\n  const rpc = async () => {\n    const transformed = transformParams(paramFields, inputParams, { emptyAsNull: false });\n    const unsub = await api.rpc[palletRpc][callable](...transformed, queryResHandler);\n    setUnsub(() => unsub);\n  };\n\n  const constant = () => {\n    const result = api.consts[palletRpc][callable];\n    result.isNone ? setStatus('None') : setStatus(result.toString());\n  };\n\n  const transaction = async () => {\n    if (unsub) {\n      unsub();\n      setUnsub(null);\n    }\n\n    setStatus('Sending...');\n\n    (isSudo() && sudoTx()) ||\n    (isUncheckedSudo() && uncheckedSudoTx()) ||\n    (isSigned() && signedTx()) ||\n    (isUnsigned() && unsignedTx()) ||\n    (isQuery() && query()) ||\n    (isRpc() && rpc()) ||\n    (isConstant() && constant());\n  };\n\n  const transformParams = (paramFields, inputParams, opts = { emptyAsNull: true }) => {\n    // if `opts.emptyAsNull` is true, empty param value will be added to res as `null`.\n    //   Otherwise, it will not be added\n    const paramVal = inputParams.map(inputParam => {\n      // To cater the js quirk that `null` is a type of `object`.\n      if (typeof inputParam === 'object' && inputParam !== null && typeof inputParam.value === 'string') {\n        return inputParam.value.trim();\n      } else if (typeof inputParam === 'string') {\n        return inputParam.trim();\n      }\n      return inputParam;\n    });\n    const params = paramFields.map((field, ind) => ({ ...field, value: paramVal[ind] || null }));\n\n    return params.reduce((memo, { type = 'string', value }) => {\n      if (value == null || value === '') return (opts.emptyAsNull ? [...memo, null] : memo);\n\n      let converted = value;\n\n      // Deal with a vector\n      if (type.indexOf('Vec<') >= 0) {\n        converted = converted.split(',').map(e => e.trim());\n        converted = converted.map(single => isNumType(type)\n          ? (single.indexOf('.') >= 0 ? Number.parseFloat(single) : Number.parseInt(single))\n          : single\n        );\n        return [...memo, converted];\n      }\n\n      // Deal with a single value\n      if (isNumType(type)) {\n        converted = converted.indexOf('.') >= 0 ? Number.parseFloat(converted) : Number.parseInt(converted);\n      }\n      return [...memo, converted];\n    }, []);\n  };\n\n  const isNumType = type =>\n    utils.paramConversion.num.some(el => type.indexOf(el) >= 0);\n\n  const allParamsFilled = () => {\n    if (paramFields.length === 0) { return true; }\n\n    return paramFields.every((paramField, ind) => {\n      const param = inputParams[ind];\n      if (paramField.optional) { return true; }\n      if (param == null) { return false; }\n\n      const value = typeof param === 'object' ? param.value : param;\n      return value !== null && value !== '';\n    });\n  };\n\n  const isSudoer = acctPair => {\n    if (!sudoKey || !acctPair) { return false; }\n    return acctPair.address === sudoKey;\n  };\n\n  return (\n    <Button\n      basic\n      color={color}\n      style={style}\n      type='submit'\n      onClick={transaction}\n      disabled={ disabled || !palletRpc || !callable || !allParamsFilled() ||\n        ((isSudo() || isUncheckedSudo()) && !isSudoer(accountPair)) }\n    >\n      {label}\n    </Button>\n  );\n}\n\n// prop type checking\nTxButton.propTypes = {\n  accountPair: PropTypes.object,\n  setStatus: PropTypes.func.isRequired,\n  type: PropTypes.oneOf([\n    'QUERY', 'RPC', 'SIGNED-TX', 'UNSIGNED-TX', 'SUDO-TX', 'UNCHECKED-SUDO-TX',\n    'CONSTANT']).isRequired,\n  attrs: PropTypes.shape({\n    palletRpc: PropTypes.string,\n    callable: PropTypes.string,\n    inputParams: PropTypes.array,\n    paramFields: PropTypes.array\n  }).isRequired\n};\n\nfunction TxGroupButton (props) {\n  return (\n    <Button.Group>\n      <TxButton\n        label='Unsigned'\n        type='UNSIGNED-TX'\n        color='grey'\n        {...props}\n      />\n      <Button.Or />\n      <TxButton\n        label='Signed'\n        type='SIGNED-TX'\n        color='blue'\n        {...props}\n      />\n      <Button.Or />\n      <TxButton\n        label='SUDO'\n        type='SUDO-TX'\n        color='red'\n        {...props}\n      />\n    </Button.Group>\n  );\n}\n\nexport { TxButton, TxGroupButton };\n","// This component will simply add utility functions to your developer console.\nimport { useSubstrate } from '../';\n\nexport default function DeveloperConsole (props) {\n  const { api, apiState, keyring, keyringState } = useSubstrate();\n  if (apiState === 'READY') { window.api = api; }\n  if (keyringState === 'READY') { window.keyring = keyring; }\n  window.util = require('@polkadot/util');\n  window.utilCrypto = require('@polkadot/util-crypto');\n\n  return null;\n}\n","import React, { useState, useEffect, createRef } from 'react';\nimport { Link } from 'react-router-dom';\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\n\nimport {\n  Menu,\n  Button,\n  Dropdown,\n  Container,\n  Icon,\n  Sticky,\n  Label\n} from 'semantic-ui-react';\n\nimport { useSubstrate } from './substrate-lib';\n\nfunction Main (props) {\n  const { keyring } = useSubstrate();\n  const { setAccountAddress } = props;\n  const [accountSelected, setAccountSelected] = useState('');\n\n  // Get the list of accounts we possess the private key for\n  const keyringOptions = keyring.getPairs().map(account => ({\n    key: account.address,\n    value: account.address,\n    text: account.meta.name.toUpperCase(),\n    icon: 'user'\n  }));\n  const initialAddress =\n  keyringOptions.length > 0 ? keyringOptions[0].value : '';\n\n  // Set the initial address\n  useEffect(() => {\n    setAccountAddress(initialAddress);\n    setAccountSelected(initialAddress);\n  }, [setAccountAddress, initialAddress]);\n\n  const onChange = address => {\n    // Update state with new account address\n    setAccountAddress(address);\n    setAccountSelected(address);\n  };\n\n  const contextRef = createRef();\n\n  return (\n    <Sticky context={contextRef}>\n      <Menu\n        attached='top'\n        tabular\n        style={{\n          backgroundColor: 'MidnightBlue',\n          borderColor: 'MidnightBlue',\n          paddingTop: '1em',\n          paddingBottom: '1em'\n        }}\n      >\n        <Container>\n          <Menu.Menu position='left' style={{ alignItems: 'center' }}>\n              <Menu.Item name='MA Token'>\n                <Link to='/ma_token'>\n                  MA Token\n                </Link>\n              </Menu.Item>\n              <Menu.Item name='Labs' >\n                <Link to='/labs'>\n                Labs\n                </Link>\n              </Menu.Item>\n              <Menu.Item name='Governance'>\n                <Link to='/governance'>\n                Governance\n                </Link>\n              </Menu.Item>\n          </Menu.Menu>\n\n          <Menu.Menu position='right' style={{ alignItems: 'center' }}>\n            { !accountSelected\n              ? <span>\n                Add your account with the{' '}\n                <a\n                  target='_blank'\n                  rel='noopener noreferrer'\n                  href='https://polkadot.js.org/extension/'\n                >\n                  Polkadot JS Extension\n                </a>\n              </span>\n              : null }\n            <CopyToClipboard text={accountSelected}>\n              <Button\n                basic\n                circular\n                size='large'\n                icon='user'\n                color={accountSelected ? 'blue' : 'red'}\n              />\n            </CopyToClipboard>\n            <Dropdown\n              search\n              selection\n              clearable\n              placeholder='Select an account'\n              options={keyringOptions}\n              onChange={(_, dropdown) => {\n                onChange(dropdown.value);\n              }}\n              value={accountSelected}\n            />\n            <BalanceAnnotation accountSelected={accountSelected} />\n          </Menu.Menu>\n        </Container>\n      </Menu>\n    </Sticky>\n  );\n}\n\nfunction BalanceAnnotation (props) {\n  const { accountSelected } = props;\n  const { api } = useSubstrate();\n  const [accountBalance, setAccountBalance] = useState(0);\n\n  // When account address changes, update subscriptions\n  useEffect(() => {\n    let unsubscribe;\n\n    // If the user has selected an address, create a new subscription\n    accountSelected &&\n      api.query.system.account(accountSelected, balance => {\n        setAccountBalance(balance.data.free.toHuman());\n      })\n        .then(unsub => {\n          unsubscribe = unsub;\n        })\n        .catch(console.error);\n\n    return () => unsubscribe && unsubscribe();\n  }, [api, accountSelected]);\n\n  return accountSelected\n    ? <Label pointing='left'>\n        <Icon name='money' color='green' />\n        {accountBalance}\n      </Label>\n    : null;\n}\n\nexport default function AccountSelector (props) {\n  const { api, keyring } = useSubstrate();\n  return keyring.getPairs && api.query ? <Main {...props} /> : null;\n}\n","import BN from 'bn.js';\nimport { useSubstrate } from '../substrate-lib';\n\n// Convert Manta currency denominated in MA to the most granular units of Manta currency\nexport default function MAToAtomicUnits (amountMA) {\n  const { api } = useSubstrate();\n  const decimals = api.registry.chainDecimals;\n  return amountMA * new BN(10).pow(new BN(decimals));\n}\n","import React, { useState } from 'react';\nimport { Form, Input, Grid, Header } from 'semantic-ui-react';\nimport { TxButton } from './substrate-lib/components';\nimport MAToAtomicUnits from './utils/MAToAtomicUnit';\n\nexport default function Main (props) {\n  const [status, setStatus] = useState(null);\n  const [formState, setFormState] = useState({ addressTo: null, amount: 0 });\n  const { accountPair } = props;\n  const onChange = (_, data) =>\n    setFormState(prev => ({ ...prev, [data.state]: data.value }));\n  const { addressTo, amount } = formState;\n\n  return (\n    <Grid.Column width={8}>\n      <Header textAlign='center'>Transfer MA Token</Header>\n      <Form>\n        <Form.Field style={{ width: '500px', textAlign: 'center' }}>\n          <Input\n            fluid\n            label='To'\n            type='text'\n            placeholder='address'\n            state='addressTo'\n            onChange={onChange}\n          />\n        </Form.Field>\n        <Form.Field style={{ width: '500px' }}>\n          <Input\n            fluid\n            label='Amount'\n            type='number'\n            placeholder='MA'\n            state='amount'\n            onChange={onChange}\n          />\n        </Form.Field>\n        <Form.Field style={{ textAlign: 'center' }}>\n          <TxButton\n            accountPair={accountPair}\n            label='Submit'\n            type='SIGNED-TX'\n            setStatus={setStatus}\n            attrs={{\n              palletRpc: 'balances',\n              callable: 'transfer',\n              inputParams: [addressTo, MAToAtomicUnits(amount)],\n              paramFields: [true, true]\n            }}\n          />\n        </Form.Field>\n        <div style={{ overflowWrap: 'break-word' }}>{status}</div>\n      </Form>\n    </Grid.Column>\n  );\n}\n","import React, { useState, useRef } from 'react';\nimport { Form, Grid, Header, Message, Label, Icon } from 'semantic-ui-react';\nimport { TxButton } from './substrate-lib/components';\nimport { base64Decode, base64Validate, base64Encode } from '@polkadot/util-crypto';\n\nexport default function Main ({ accountPair }) {\n  const EXPECTED_PAYLOAD_SIZE_IN_BYTES = 608;\n\n  const [transferInfo, setTransferInfo] = useState(null);\n  const [sender1, setSender1] = useState('');\n  const [sender2, setSender2] = useState('');\n  const [receiver1, setReceiver1] = useState('');\n  const [receiver2, setReceiver2] = useState('');\n  const [proof, setProof] = useState('');\n  const [status, setStatus] = useState(null);\n\n  const fileUploadRef = useRef();\n  const [uploadErrorText, setUploadErrorText] = useState('');\n\n  const formatBase64StringForDisplay = base64String => {\n    if (!base64String) {\n      return '';\n    }\n    const LINE_LENGTH = 75;\n    let formattedString = '';\n    for (let i = 0; i < base64String.length; i++) {\n      formattedString += base64String.slice(i, i + LINE_LENGTH);\n      formattedString += '\\n';\n      i += LINE_LENGTH;\n    }\n    return formattedString;\n  };\n\n  const displayTransferInfo = transferInfoBytes => {\n    setTransferInfo(transferInfoBytes)\n    setSender1(base64Encode(transferInfoBytes.slice(0, 96)));\n    setSender2(base64Encode(transferInfoBytes.slice(97, 192)));\n    setReceiver1(base64Encode(transferInfoBytes.slice(193, 304)));\n    setReceiver2(base64Encode(transferInfoBytes.slice(305, 416)));\n    setProof(base64Encode(transferInfoBytes.slice(317, 608)));\n  };\n\n  const validateFileUpload = fileText => {\n    try {\n      base64Validate(fileText);\n    } catch (error) {\n      fileUploadRef.current.value = null;\n      setUploadErrorText('File is not valid base64');\n      return false;\n    }\n    const bytes = base64Decode(fileText.trim());\n    if (bytes.length !== EXPECTED_PAYLOAD_SIZE_IN_BYTES) {\n      fileUploadRef.current.value = null;\n      setUploadErrorText(`File is ${bytes.length} bytes, expected 608`);\n      return false;\n    }\n    return true;\n  };\n\n  const handleFileUpload = () => {\n    setUploadErrorText('');\n    displayTransferInfo([]);\n    const file = fileUploadRef.current.files[0];\n    if (!file) {\n      return;\n    }\n    const reader = new FileReader();\n    reader.readAsText(file);\n    reader.onload = async (readerEvent) => {\n      const text = (readerEvent.target.result);\n      if (validateFileUpload(text)) {\n        displayTransferInfo(base64Decode(text));\n      }\n    };\n  };\n\n  return (\n    <Grid.Column width={10}>\n      <Header textAlign='center'>Private Transfer</Header>\n      <Form>\n        <Form.Field inline='true' style={{ textAlign: 'center' }}>\n          <Label basic color='teal'>\n              Upload a private payment file (608 bytes)\n            </Label>\n          <input\n            accept='.txt'\n            id='file'\n            type='file'\n            onChange={handleFileUpload}\n            ref={fileUploadRef}\n            style={{ marginLeft: 0, marginTop: '.5em', border: '0px'}}\n          />\n          <Message\n            error\n            onDismiss={() => setUploadErrorText('')}\n            header='Upload failed'\n            content={uploadErrorText}\n            visible={uploadErrorText.length}\n          />\n        </Form.Field>\n        <Form.Field>\n          <p><b>Sender1:</b> {formatBase64StringForDisplay(sender1)}</p>\n          <p><b>Sender2:</b> {formatBase64StringForDisplay(sender2)}</p>\n          <p><b>Receiver1:</b> {formatBase64StringForDisplay(receiver1)}</p>\n          <p><b>Receiver2:</b> {formatBase64StringForDisplay(receiver2)}</p>\n          <p><b>Proof:</b> {formatBase64StringForDisplay(proof)}</p>\n        </Form.Field>\n        <Form.Field style={{ textAlign: 'center' }}>\n          <TxButton\n            accountPair={accountPair}\n            label='Submit'\n            type='SIGNED-TX'\n            setStatus={setStatus}\n            attrs={{\n              palletRpc: 'mantaPay',\n              callable: 'privateTransfer',\n              inputParams: [transferInfo],\n              paramFields: [true]\n            }}\n          />\n        </Form.Field>\n        <div style={{ overflowWrap: 'break-word' }}>{status}</div>\n      </Form>\n    </Grid.Column>\n  );\n}\n","import React from 'react';\n\nexport default function Main (props) {\n  return (\n    <div>todo</div>\n  );\n}\n","import React from 'react';\nimport { Route, Switch, Redirect } from 'react-router-dom';\nimport Transfer from './Transfer';\nimport Labs from './Labs';\n\nimport Governance from './Governance';\n\nexport default function Main (props) {\n  const accountPair = props.accountPair;\n  return (\n      <Switch>\n          <Redirect exact from=\"/\" to=\"/ma_token\" />\n          <Redirect exact from=\"/substrate-front-end-template\" to=\"/ma_token\" />\n          <Route path=\"/ma_token\" component={() => <Transfer accountPair={accountPair}/>} />\n          <Route path=\"/labs\" component={() => <Labs accountPair={accountPair}/>} />\n          <Route path=\"/governance\" component={Governance} />\n      </Switch>\n  );\n}\n","import React, { useState, createRef } from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { Container, Dimmer, Loader, Grid, Message } from 'semantic-ui-react';\nimport 'semantic-ui-css/semantic.min.css';\n\nimport { SubstrateContextProvider, useSubstrate } from './substrate-lib';\nimport { DeveloperConsole } from './substrate-lib/components';\n\nimport Navbar from './Navbar';\nimport Routes from './Routes';\n\nfunction Main () {\n  const [accountAddress, setAccountAddress] = useState(null);\n  const { apiState, keyring, keyringState, apiError } = useSubstrate();\n  const accountPair =\n    accountAddress &&\n    keyringState === 'READY' &&\n    keyring.getPair(accountAddress);\n\n  const loader = text =>\n    <Dimmer active>\n      <Loader size='small'>{text}</Loader>\n    </Dimmer>;\n\n  const message = err =>\n    <Grid centered columns={2} padded>\n      <Grid.Column>\n        <Message negative compact floating\n          header='Error Connecting to Substrate'\n          content={`${JSON.stringify(err, null, 4)}`}\n        />\n      </Grid.Column>\n    </Grid>;\n\n  if (apiState === 'ERROR') return message(apiError);\n  else if (apiState !== 'READY') return loader('Connecting to Substrate');\n\n  if (keyringState !== 'READY') {\n    return loader('Loading accounts (please review any extension\\'s authorization)');\n  }\n\n  const contextRef = createRef();\n\n  return (\n    <div ref={contextRef}>\n        <Router>\n            <Navbar setAccountAddress={setAccountAddress} />\n            <Container textAlign='center' style={{ paddingTop: '3em' }}>\n            <Grid centered>\n            <Routes accountPair={accountPair} />\n            </Grid>\n            </Container>\n            <DeveloperConsole />\n        </Router>\n    </div>\n  );\n}\n\nexport default function App () {\n  return (\n    <SubstrateContextProvider>\n      <Main />\n    </SubstrateContextProvider>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(<App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}